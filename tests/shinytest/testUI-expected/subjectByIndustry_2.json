{
  "input": {
    "countinput2": "sex",
    "crosstabs.subjectinput": "All",
    "earningsbutton": "Median earnings",
    "navbar": "subjectByIndustry",
    "qualinput3": "Level 8",
    "YAGinput2": "5"
  },
  "output": {
    "crosstab": {
      "x": {
        "tag": {
          "name": "Reactable",
          "attribs": {
            "data": {
              "SECTIONNAME": [
                "Public administration and defence - compulsory social security",
                "Education",
                "Administrative and support service activities",
                "Information and communication",
                "Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use",
                "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                "Transportation and storage",
                "Construction",
                "Financial and insurance activities",
                "Arts, entertainment and recreation",
                "Electricity, gas, steam and air conditioning supply",
                "Water supply - sewerage, waste management and remediation activities",
                "Professional, scientific and technical activities",
                "Human health and social work activities",
                "Mining and quarrying",
                "Accommodation and food service activities",
                "Other service activities",
                "Manufacturing",
                "Agriculture, forestry and fishing",
                "Real estate activities",
                "Not known"
              ],
              "group_name": [
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All"
              ],
              "Female": [
                25000,
                26900,
                24300,
                24200,
                "NA",
                25200,
                24300,
                24000,
                27200,
                24700,
                24100,
                25900,
                25100,
                27100,
                24700,
                25700,
                23900,
                24200,
                23800,
                26100,
                25300
              ],
              "Male": [
                24500,
                25200,
                25000,
                24300,
                23600,
                25700,
                27300,
                25500,
                22600,
                23900,
                24100,
                25800,
                24700,
                23000,
                26500,
                23500,
                26200,
                24900,
                23600,
                25400,
                23400
              ],
              "Female & Male": [
                25300,
                24300,
                24600,
                24900,
                23500,
                24000,
                26400,
                26400,
                26200,
                24800,
                27100,
                23400,
                24900,
                25700,
                25800,
                24800,
                26000,
                26900,
                26500,
                23800,
                23300
              ]
            },
            "columns": [
              {
                "accessor": ".details",
                "name": "",
                "type": "NULL",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "sortable": false,
                "resizable": false,
                "filterable": false,
                "width": 45,
                "align": "center",
                "details": [
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Public administration and defence - compulsory social security",
                              "Public administration and defence - compulsory social security",
                              "Public administration and defence - compulsory social security"
                            ],
                            "group_name": [
                              "Compulsory social security activities",
                              "Provision of services to the community as a whole",
                              "Administration of the State and the economic and social policy of the community"
                            ],
                            "Female": [
                              "NA",
                              24100,
                              24700
                            ],
                            "Male": [
                              24300,
                              26100,
                              24700
                            ],
                            "Female & Male": [
                              24900,
                              25600,
                              25000
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "x",
                                "£24,100",
                                "£24,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,300",
                                "£26,100",
                                "£24,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,900",
                                "£25,600",
                                "£25,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Education",
                              "Education",
                              "Education",
                              "Education",
                              "Education",
                              "Education"
                            ],
                            "group_name": [
                              "Pre-primary education",
                              "Higher education",
                              "Primary education",
                              "Secondary education",
                              "Other education",
                              "Educational support activities"
                            ],
                            "Female": [
                              25500,
                              23100,
                              23800,
                              26500,
                              24600,
                              25900
                            ],
                            "Male": [
                              24700,
                              26100,
                              26700,
                              25500,
                              25000,
                              24500
                            ],
                            "Female & Male": [
                              26500,
                              23400,
                              25800,
                              26200,
                              25900,
                              24600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£23,100",
                                "£23,800",
                                "£26,500",
                                "£24,600",
                                "£25,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,700",
                                "£26,100",
                                "£26,700",
                                "£25,500",
                                "£25,000",
                                "£24,500"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£26,500",
                                "£23,400",
                                "£25,800",
                                "£26,200",
                                "£25,900",
                                "£24,600"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities"
                            ],
                            "group_name": [
                              "Leasing of intellectual property and similar products; except copyrighted works",
                              "Renting and leasing of motor vehicles",
                              "Business support service activities n.e.c.",
                              "Organisation of conventions and trade shows",
                              "Temporary employment agency activities",
                              "Activities of employment placement agencies",
                              "Other reservation service and related activities",
                              "Other human resources provision",
                              "Combined facilities support activities",
                              "Travel agency and tour operator activities",
                              "Activities of call centres",
                              "Office administrative and support activities",
                              "Renting and leasing of other machinery; equipment and tangible goods"
                            ],
                            "Female": [
                              24000,
                              24800,
                              27600,
                              24700,
                              27000,
                              25000,
                              23700,
                              "NA",
                              25100,
                              24300,
                              "NA",
                              25500,
                              "NA"
                            ],
                            "Male": [
                              26400,
                              23800,
                              25100,
                              25700,
                              27500,
                              24000,
                              "NA",
                              25800,
                              "NA",
                              24000,
                              24000,
                              26400,
                              23900
                            ],
                            "Female & Male": [
                              26400,
                              25600,
                              25500,
                              26000,
                              26200,
                              23800,
                              24300,
                              26400,
                              26200,
                              25300,
                              25400,
                              24100,
                              25900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,000",
                                "£24,800",
                                "£27,600",
                                "£24,700",
                                "£27,000",
                                "£25,000",
                                "£23,700",
                                "x",
                                "£25,100",
                                "£24,300",
                                "x",
                                "£25,500",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£26,400",
                                "£23,800",
                                "£25,100",
                                "£25,700",
                                "£27,500",
                                "£24,000",
                                "x",
                                "£25,800",
                                "x",
                                "£24,000",
                                "£24,000",
                                "£26,400",
                                "£23,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£26,400",
                                "£25,600",
                                "£25,500",
                                "£26,000",
                                "£26,200",
                                "£23,800",
                                "£24,300",
                                "£26,400",
                                "£26,200",
                                "£25,300",
                                "£25,400",
                                "£24,100",
                                "£25,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication"
                            ],
                            "group_name": [
                              "Satellite telecommunications activities",
                              "Sound recording and music publishing activities",
                              "Wireless telecommunications activities",
                              "Data processing; hosting and related activities; web portals",
                              "Computer programming; consultancy and related activities",
                              "Television programming and broadcasting activities",
                              "Software publishing",
                              "Publishing of books; periodicals and other publishing activities",
                              "Other telecommunications activities",
                              "Motion picture; video and television programme activities",
                              "Other information service activities"
                            ],
                            "Female": [
                              "NA",
                              "NA",
                              25000,
                              25700,
                              25400,
                              23100,
                              24000,
                              24300,
                              25600,
                              24700,
                              26400
                            ],
                            "Male": [
                              24000,
                              24900,
                              26200,
                              25800,
                              24800,
                              24800,
                              24200,
                              26700,
                              26800,
                              24800,
                              25400
                            ],
                            "Female & Male": [
                              25100,
                              26000,
                              25200,
                              22800,
                              25200,
                              25900,
                              26200,
                              26000,
                              25600,
                              25200,
                              23200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "x",
                                "x",
                                "£25,000",
                                "£25,700",
                                "£25,400",
                                "£23,100",
                                "£24,000",
                                "£24,300",
                                "£25,600",
                                "£24,700",
                                "£26,400"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,000",
                                "£24,900",
                                "£26,200",
                                "£25,800",
                                "£24,800",
                                "£24,800",
                                "£24,200",
                                "£26,700",
                                "£26,800",
                                "£24,800",
                                "£25,400"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£25,100",
                                "£26,000",
                                "£25,200",
                                "£22,800",
                                "£25,200",
                                "£25,900",
                                "£26,200",
                                "£26,000",
                                "£25,600",
                                "£25,200",
                                "£23,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use"
                            ],
                            "group_name": [
                              "Activities of households as employers of domestic personnel"
                            ],
                            "Female": [
                              "NA"
                            ],
                            "Male": [
                              25200
                            ],
                            "Female & Male": [
                              24200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles"
                            ],
                            "group_name": [
                              "Wholesale of food; beverages and tobacco",
                              "Retail sale of cultural and recreation goods in specialised stores",
                              "Wholesale on a fee or contract basis",
                              "Retail sale of automotive fuel in specialised stores",
                              "Retail sale of other goods in specialised stores",
                              "Maintenance and repair of motor vehicles",
                              "Wholesale of other machinery; equipment and supplies",
                              "Retail sale of other household equipment in specialised stores",
                              "Retail sale of food; beverages and tobacco in specialised stores",
                              "Other specialised wholesale",
                              "Wholesale of information and communication equipment",
                              "Retail trade not in stores; stalls or markets",
                              "Retail sale in non-specialised stores",
                              "Wholesale of household goods",
                              "Sale of motor vehicle parts and accessories"
                            ],
                            "Female": [
                              23800,
                              25300,
                              23200,
                              26100,
                              26500,
                              25200,
                              25000,
                              26100,
                              26300,
                              25700,
                              24800,
                              23600,
                              24100,
                              25900,
                              26000
                            ],
                            "Male": [
                              25500,
                              25600,
                              26400,
                              26200,
                              25100,
                              25800,
                              25500,
                              25400,
                              "NA",
                              25500,
                              25900,
                              24700,
                              25900,
                              27500,
                              "NA"
                            ],
                            "Female & Male": [
                              26400,
                              24600,
                              23900,
                              25600,
                              24300,
                              25600,
                              24500,
                              24300,
                              24800,
                              25800,
                              24900,
                              23900,
                              27500,
                              23600,
                              26200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£23,800",
                                "£25,300",
                                "£23,200",
                                "£26,100",
                                "£26,500",
                                "£25,200",
                                "£25,000",
                                "£26,100",
                                "£26,300",
                                "£25,700",
                                "£24,800",
                                "£23,600",
                                "£24,100",
                                "£25,900",
                                "£26,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£25,600",
                                "£26,400",
                                "£26,200",
                                "£25,100",
                                "£25,800",
                                "£25,500",
                                "£25,400",
                                "x",
                                "£25,500",
                                "£25,900",
                                "£24,700",
                                "£25,900",
                                "£27,500",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£26,400",
                                "£24,600",
                                "£23,900",
                                "£25,600",
                                "£24,300",
                                "£25,600",
                                "£24,500",
                                "£24,300",
                                "£24,800",
                                "£25,800",
                                "£24,900",
                                "£23,900",
                                "£27,500",
                                "£23,600",
                                "£26,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage"
                            ],
                            "group_name": [
                              "Other postal and courier activities",
                              "Postal activities under universal service obligation",
                              "Support activities for transportation",
                              "Freight transport by road and removal services",
                              "Warehousing and storage",
                              "Freight rail transport",
                              "Other passenger land transport"
                            ],
                            "Female": [
                              "NA",
                              23800,
                              25900,
                              25600,
                              24100,
                              25600,
                              "NA"
                            ],
                            "Male": [
                              24600,
                              "NA",
                              26300,
                              25900,
                              25400,
                              "NA",
                              23900
                            ],
                            "Female & Male": [
                              25600,
                              23600,
                              22900,
                              25900,
                              25600,
                              24400,
                              23600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "x",
                                "£23,800",
                                "£25,900",
                                "£25,600",
                                "£24,100",
                                "£25,600",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,600",
                                "x",
                                "£26,300",
                                "£25,900",
                                "£25,400",
                                "x",
                                "£23,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£25,600",
                                "£23,600",
                                "£22,900",
                                "£25,900",
                                "£25,600",
                                "£24,400",
                                "£23,600"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction"
                            ],
                            "group_name": [
                              "Construction of residential and non-residential buildings",
                              "Building completion and finishing",
                              "Construction of other civil engineering projects",
                              "Development of building projects",
                              "Construction of utility projects",
                              "Electrical; plumbing and other construction installation activities",
                              "Construction of roads and railways"
                            ],
                            "Female": [
                              24200,
                              "NA",
                              "NA",
                              25800,
                              26300,
                              25700,
                              "NA"
                            ],
                            "Male": [
                              26100,
                              24400,
                              25900,
                              24700,
                              25900,
                              25000,
                              24100
                            ],
                            "Female & Male": [
                              25500,
                              25400,
                              26000,
                              25800,
                              25500,
                              26500,
                              24900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,200",
                                "x",
                                "x",
                                "£25,800",
                                "£26,300",
                                "£25,700",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£26,100",
                                "£24,400",
                                "£25,900",
                                "£24,700",
                                "£25,900",
                                "£25,000",
                                "£24,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£25,400",
                                "£26,000",
                                "£25,800",
                                "£25,500",
                                "£26,500",
                                "£24,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities"
                            ],
                            "group_name": [
                              "Reinsurance",
                              "Other financial service activities; except insurance and pension funding",
                              "Insurance",
                              "Trusts; funds and similar financial entities",
                              "Monetary intermediation",
                              "Activities auxiliary to insurance and pension funding",
                              "Activities auxiliary to financial services; except insurance and pension funding",
                              "Fund management activities",
                              "Pension funding"
                            ],
                            "Female": [
                              25600,
                              24500,
                              24600,
                              "NA",
                              24700,
                              26000,
                              24200,
                              25200,
                              26000
                            ],
                            "Male": [
                              "NA",
                              25400,
                              23900,
                              24800,
                              24800,
                              25600,
                              25200,
                              24000,
                              27100
                            ],
                            "Female & Male": [
                              25100,
                              25800,
                              25000,
                              26000,
                              24300,
                              24300,
                              24800,
                              24500,
                              24200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,600",
                                "£24,500",
                                "£24,600",
                                "x",
                                "£24,700",
                                "£26,000",
                                "£24,200",
                                "£25,200",
                                "£26,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "x",
                                "£25,400",
                                "£23,900",
                                "£24,800",
                                "£24,800",
                                "£25,600",
                                "£25,200",
                                "£24,000",
                                "£27,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£25,100",
                                "£25,800",
                                "£25,000",
                                "£26,000",
                                "£24,300",
                                "£24,300",
                                "£24,800",
                                "£24,500",
                                "£24,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation"
                            ],
                            "group_name": [
                              "Libraries; archives; museums and other cultural activities",
                              "Amusement and recreation activities",
                              "Sports activities",
                              "Gambling and betting activities",
                              "Creative; arts and entertainment activities"
                            ],
                            "Female": [
                              24700,
                              24600,
                              26400,
                              25100,
                              25200
                            ],
                            "Male": [
                              24100,
                              24600,
                              24700,
                              "NA",
                              23400
                            ],
                            "Female & Male": [
                              23300,
                              24100,
                              24200,
                              24700,
                              24000
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,700",
                                "£24,600",
                                "£26,400",
                                "£25,100",
                                "£25,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,100",
                                "£24,600",
                                "£24,700",
                                "x",
                                "£23,400"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£23,300",
                                "£24,100",
                                "£24,200",
                                "£24,700",
                                "£24,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Electricity, gas, steam and air conditioning supply",
                              "Electricity, gas, steam and air conditioning supply"
                            ],
                            "group_name": [
                              "Electric power generation; transmission and distribution",
                              "Manufacture of gas; distribution of gaseous fuels through mains"
                            ],
                            "Female": [
                              24700,
                              "NA"
                            ],
                            "Male": [
                              24000,
                              26000
                            ],
                            "Female & Male": [
                              24700,
                              25000
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,700",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,000",
                                "£26,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,700",
                                "£25,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities"
                            ],
                            "group_name": [
                              "Waste treatment and disposal",
                              "Water collection; treatment and supply",
                              "Materials recovery",
                              "Waste collection"
                            ],
                            "Female": [
                              25700,
                              24300,
                              "NA",
                              "NA"
                            ],
                            "Male": [
                              23100,
                              24300,
                              25800,
                              26200
                            ],
                            "Female & Male": [
                              26400,
                              24200,
                              25500,
                              23600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,700",
                                "£24,300",
                                "x",
                                "x"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£23,100",
                                "£24,300",
                                "£25,800",
                                "£26,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£26,400",
                                "£24,200",
                                "£25,500",
                                "£23,600"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities"
                            ],
                            "group_name": [
                              "Market research and public opinion polling",
                              "Technical testing and analysis",
                              "Veterinary activities",
                              "Activities of head offices",
                              "Advertising",
                              "Research and experimental development on natural sciences and engineering",
                              "Research and experimental development on social sciences and humanities",
                              "Management consultancy activities",
                              "Architectural and engineering activities and related technical consultancy",
                              "Legal activities",
                              "Specialised design activities",
                              "Other professional; scientific and technical activities n.e.c.",
                              "Accounting; bookkeeping and auditing activities; tax consultancy"
                            ],
                            "Female": [
                              25900,
                              24300,
                              25600,
                              24900,
                              24500,
                              27300,
                              23400,
                              23700,
                              25200,
                              23900,
                              "NA",
                              25200,
                              25200
                            ],
                            "Male": [
                              25200,
                              24600,
                              25400,
                              26700,
                              24500,
                              26500,
                              24900,
                              25300,
                              23000,
                              25500,
                              24900,
                              25400,
                              24800
                            ],
                            "Female & Male": [
                              26300,
                              26500,
                              23800,
                              25400,
                              23900,
                              25100,
                              25600,
                              25800,
                              23600,
                              25100,
                              24500,
                              26000,
                              24700
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,900",
                                "£24,300",
                                "£25,600",
                                "£24,900",
                                "£24,500",
                                "£27,300",
                                "£23,400",
                                "£23,700",
                                "£25,200",
                                "£23,900",
                                "x",
                                "£25,200",
                                "£25,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,200",
                                "£24,600",
                                "£25,400",
                                "£26,700",
                                "£24,500",
                                "£26,500",
                                "£24,900",
                                "£25,300",
                                "£23,000",
                                "£25,500",
                                "£24,900",
                                "£25,400",
                                "£24,800"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£26,300",
                                "£26,500",
                                "£23,800",
                                "£25,400",
                                "£23,900",
                                "£25,100",
                                "£25,600",
                                "£25,800",
                                "£23,600",
                                "£25,100",
                                "£24,500",
                                "£26,000",
                                "£24,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities"
                            ],
                            "group_name": [
                              "Other residential care activities",
                              "Hospital activities",
                              "Medical and dental practice activities",
                              "Other human health activities",
                              "Residential nursing care activities",
                              "Social work activities without accommodation for the elderly and disabled",
                              "Residential care activities for mental retardation; mental health and substance abuse",
                              "Other social work activities without accommodation",
                              "Residential care activities for the elderly and disabled"
                            ],
                            "Female": [
                              25500,
                              23700,
                              23200,
                              24200,
                              26200,
                              26700,
                              25700,
                              25800,
                              24000
                            ],
                            "Male": [
                              24300,
                              25500,
                              26800,
                              24400,
                              23000,
                              25600,
                              24900,
                              25300,
                              24500
                            ],
                            "Female & Male": [
                              24000,
                              22000,
                              24100,
                              23600,
                              24900,
                              25800,
                              26400,
                              25700,
                              24200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£23,700",
                                "£23,200",
                                "£24,200",
                                "£26,200",
                                "£26,700",
                                "£25,700",
                                "£25,800",
                                "£24,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,300",
                                "£25,500",
                                "£26,800",
                                "£24,400",
                                "£23,000",
                                "£25,600",
                                "£24,900",
                                "£25,300",
                                "£24,500"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,000",
                                "£22,000",
                                "£24,100",
                                "£23,600",
                                "£24,900",
                                "£25,800",
                                "£26,400",
                                "£25,700",
                                "£24,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Mining and quarrying"
                            ],
                            "group_name": [
                              "Libraries; archives; museums and other cultural activities"
                            ],
                            "Female": [
                              24000
                            ],
                            "Male": [
                              25100
                            ],
                            "Female & Male": [
                              27100
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,000"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£27,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities"
                            ],
                            "group_name": [
                              "Beverage serving activities",
                              "Event catering and other food service activities",
                              "Hotels and similar accommodation",
                              "Restaurants and mobile food service activities"
                            ],
                            "Female": [
                              24800,
                              23800,
                              24500,
                              25700
                            ],
                            "Male": [
                              25500,
                              24900,
                              26200,
                              27700
                            ],
                            "Female & Male": [
                              24600,
                              24800,
                              24400,
                              26200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,800",
                                "£23,800",
                                "£24,500",
                                "£25,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£24,900",
                                "£26,200",
                                "£27,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,600",
                                "£24,800",
                                "£24,400",
                                "£26,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Other service activities",
                              "Other service activities",
                              "Other service activities",
                              "Other service activities",
                              "Other service activities"
                            ],
                            "group_name": [
                              "Activities of trade unions",
                              "Repair of computers and communication equipment",
                              "Activities of business; employers and professional membership organisations",
                              "Other personal service activities",
                              "Activities of other membership organisations"
                            ],
                            "Female": [
                              24300,
                              "NA",
                              23800,
                              25100,
                              24700
                            ],
                            "Male": [
                              25100,
                              24800,
                              26000,
                              24900,
                              25500
                            ],
                            "Female & Male": [
                              24600,
                              23600,
                              25000,
                              25300,
                              26100
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,300",
                                "x",
                                "£23,800",
                                "£25,100",
                                "£24,700"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,100",
                                "£24,800",
                                "£26,000",
                                "£24,900",
                                "£25,500"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,600",
                                "£23,600",
                                "£25,000",
                                "£25,300",
                                "£26,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing"
                            ],
                            "group_name": [
                              "Manufacture of glass and glass products",
                              "Manufacture of basic pharmaceutical products",
                              "Manufacture of consumer electronics",
                              "Manufacture of games and toys",
                              "Manufacture of optical instruments and photographic equipment",
                              "Manufacture of communication equipment",
                              "Manufacture of plastics products",
                              "Manufacture of motor vehicles",
                              "Manufacture of parts and accessories for motor vehicles",
                              "Manufacture of general-purpose machinery",
                              "Manufacture of other chemical products",
                              "Manufacture of instruments and appliances for measuring; testing and navigation; watches and clocks",
                              "Manufacture of articles of concrete; cement and plaster",
                              "Manufacture of pharmaceutical preparations",
                              "Manufacture of basic precious and other non-ferrous metals",
                              "Manufacture of prepared animal feeds",
                              "Installation of industrial machinery and equipment",
                              "Processing and preserving of fruit and vegetables",
                              "Manufacture of other special-purpose machinery",
                              "Manufacture of other food products",
                              "Manufacture of medical and dental instruments and supplies",
                              "Manufacture of paints; varnishes and similar coatings; printing ink and mastics",
                              "Manufacture of domestic appliances",
                              "Manufacture of electric lighting equipment",
                              "Manufacture of computers and peripheral equipment",
                              "Manufacture of pesticides and other agrochemical products",
                              "Manufacture of agricultural and forestry machinery",
                              "Manufacture of basic chemicals; fertilisers and nitrogen compounds; plastics and synthetic rubber in primary forms",
                              "Repair of fabricated metal products; machinery and equipment",
                              "Manufacture of basic iron and steel and of ferro-alloys",
                              "Manufacture of other electrical equipment",
                              "Printing and service activities related to printing",
                              "Forging; pressing; stamping and roll-forming of metal; powder metallurgy",
                              "Manufacture of bakery and farinaceous products",
                              "Manufacture of other general-purpose machinery",
                              "Treatment and coating of metals; machining",
                              "Manufacture of irradiation; electromedical and electrotherapeutic equipment",
                              "Manufacture of beverages",
                              "Manufacture of electronic components and boards",
                              "Manufacture of weapons and ammunition",
                              "Manufacture of wiring and wiring devices",
                              "Manufacture of metal forming machinery and machine tools",
                              "Manufacture of furniture",
                              "Manufacture of railway locomotives and rolling stock",
                              "Weaving of textiles",
                              "Manufacture of air and spacecraft and related machinery"
                            ],
                            "Female": [
                              "NA",
                              25000,
                              "NA",
                              "NA",
                              24400,
                              "NA",
                              23100,
                              25000,
                              "NA",
                              25500,
                              24900,
                              24100,
                              24900,
                              25900,
                              "NA",
                              27300,
                              "NA",
                              24700,
                              "NA",
                              25200,
                              24700,
                              23900,
                              "NA",
                              "NA",
                              "NA",
                              24800,
                              "NA",
                              24000,
                              25800,
                              "NA",
                              "NA",
                              25200,
                              26200,
                              25900,
                              26200,
                              "NA",
                              "NA",
                              26400,
                              "NA",
                              24500,
                              "NA",
                              25600,
                              23800,
                              "NA",
                              "NA",
                              23100
                            ],
                            "Male": [
                              26300,
                              24600,
                              25100,
                              25500,
                              24900,
                              23400,
                              26100,
                              25500,
                              25200,
                              23700,
                              25300,
                              24000,
                              25000,
                              24200,
                              24100,
                              "NA",
                              25600,
                              "NA",
                              25000,
                              25700,
                              25200,
                              25200,
                              25600,
                              27100,
                              25000,
                              25400,
                              23300,
                              26800,
                              25000,
                              23000,
                              25100,
                              "NA",
                              "NA",
                              26000,
                              25000,
                              24400,
                              26700,
                              "NA",
                              24900,
                              25700,
                              26100,
                              "NA",
                              24200,
                              24400,
                              25400,
                              26900
                            ],
                            "Female & Male": [
                              24700,
                              26100,
                              24900,
                              25200,
                              27300,
                              24900,
                              23900,
                              23900,
                              25200,
                              25300,
                              24000,
                              24400,
                              27700,
                              26100,
                              24400,
                              24200,
                              24300,
                              25200,
                              24100,
                              24000,
                              25200,
                              25900,
                              24900,
                              26800,
                              26300,
                              24700,
                              24400,
                              24200,
                              25700,
                              25000,
                              24500,
                              24800,
                              23500,
                              25900,
                              23800,
                              25700,
                              25000,
                              25000,
                              25200,
                              24400,
                              24900,
                              24200,
                              25300,
                              26300,
                              23700,
                              23200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "x",
                                "£25,000",
                                "x",
                                "x",
                                "£24,400",
                                "x",
                                "£23,100",
                                "£25,000",
                                "x",
                                "£25,500",
                                "£24,900",
                                "£24,100",
                                "£24,900",
                                "£25,900",
                                "x",
                                "£27,300",
                                "x",
                                "£24,700",
                                "x",
                                "£25,200",
                                "£24,700",
                                "£23,900",
                                "x",
                                "x",
                                "x",
                                "£24,800",
                                "x",
                                "£24,000",
                                "£25,800",
                                "x",
                                "x",
                                "£25,200",
                                "£26,200",
                                "£25,900",
                                "£26,200",
                                "x",
                                "x",
                                "£26,400",
                                "x",
                                "£24,500",
                                "x",
                                "£25,600",
                                "£23,800",
                                "x",
                                "x",
                                "£23,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£26,300",
                                "£24,600",
                                "£25,100",
                                "£25,500",
                                "£24,900",
                                "£23,400",
                                "£26,100",
                                "£25,500",
                                "£25,200",
                                "£23,700",
                                "£25,300",
                                "£24,000",
                                "£25,000",
                                "£24,200",
                                "£24,100",
                                "x",
                                "£25,600",
                                "x",
                                "£25,000",
                                "£25,700",
                                "£25,200",
                                "£25,200",
                                "£25,600",
                                "£27,100",
                                "£25,000",
                                "£25,400",
                                "£23,300",
                                "£26,800",
                                "£25,000",
                                "£23,000",
                                "£25,100",
                                "x",
                                "x",
                                "£26,000",
                                "£25,000",
                                "£24,400",
                                "£26,700",
                                "x",
                                "£24,900",
                                "£25,700",
                                "£26,100",
                                "x",
                                "£24,200",
                                "£24,400",
                                "£25,400",
                                "£26,900"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,700",
                                "£26,100",
                                "£24,900",
                                "£25,200",
                                "£27,300",
                                "£24,900",
                                "£23,900",
                                "£23,900",
                                "£25,200",
                                "£25,300",
                                "£24,000",
                                "£24,400",
                                "£27,700",
                                "£26,100",
                                "£24,400",
                                "£24,200",
                                "£24,300",
                                "£25,200",
                                "£24,100",
                                "£24,000",
                                "£25,200",
                                "£25,900",
                                "£24,900",
                                "£26,800",
                                "£26,300",
                                "£24,700",
                                "£24,400",
                                "£24,200",
                                "£25,700",
                                "£25,000",
                                "£24,500",
                                "£24,800",
                                "£23,500",
                                "£25,900",
                                "£23,800",
                                "£25,700",
                                "£25,000",
                                "£25,000",
                                "£25,200",
                                "£24,400",
                                "£24,900",
                                "£24,200",
                                "£25,300",
                                "£26,300",
                                "£23,700",
                                "£23,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Agriculture, forestry and fishing"
                            ],
                            "group_name": [
                              "Not known"
                            ],
                            "Female": [
                              24800
                            ],
                            "Male": [
                              24800
                            ],
                            "Female & Male": [
                              24400
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,800"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,800"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,400"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Real estate activities",
                              "Real estate activities"
                            ],
                            "group_name": [
                              "Real estate activities on a fee or contract basis",
                              "Renting and operating of own or leased real estate"
                            ],
                            "Female": [
                              25500,
                              24200
                            ],
                            "Male": [
                              25100,
                              23600
                            ],
                            "Female & Male": [
                              23700,
                              24100
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£25,500",
                                "£24,200"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£25,100",
                                "£23,600"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£23,700",
                                "£24,100"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Not known"
                            ],
                            "group_name": [
                              "Not known"
                            ],
                            "Female": [
                              24500
                            ],
                            "Male": [
                              24500
                            ],
                            "Female & Male": [
                              24800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "cell": [
                                "£24,500"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "cell": [
                                "£24,500"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "cell": [
                                "£24,800"
                              ],
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "accessor": "SECTIONNAME",
                "name": "Industry",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 500
              },
              {
                "accessor": "group_name",
                "name": "3 digit SIC code",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 300
              },
              {
                "accessor": "Female",
                "name": "Female",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "cell": [
                  "£25,000",
                  "£26,900",
                  "£24,300",
                  "£24,200",
                  "x",
                  "£25,200",
                  "£24,300",
                  "£24,000",
                  "£27,200",
                  "£24,700",
                  "£24,100",
                  "£25,900",
                  "£25,100",
                  "£27,100",
                  "£24,700",
                  "£25,700",
                  "£23,900",
                  "£24,200",
                  "£23,800",
                  "£26,100",
                  "£25,300"
                ],
                "footer": "22,745",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Male",
                "name": "Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "cell": [
                  "£24,500",
                  "£25,200",
                  "£25,000",
                  "£24,300",
                  "£23,600",
                  "£25,700",
                  "£27,300",
                  "£25,500",
                  "£22,600",
                  "£23,900",
                  "£24,100",
                  "£25,800",
                  "£24,700",
                  "£23,000",
                  "£26,500",
                  "£23,500",
                  "£26,200",
                  "£24,900",
                  "£23,600",
                  "£25,400",
                  "£23,400"
                ],
                "footer": "31,250",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Female & Male",
                "name": "Female & Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "cell": [
                  "£25,300",
                  "£24,300",
                  "£24,600",
                  "£24,900",
                  "£23,500",
                  "£24,000",
                  "£26,400",
                  "£26,400",
                  "£26,200",
                  "£24,800",
                  "£27,100",
                  "£23,400",
                  "£24,900",
                  "£25,700",
                  "£25,800",
                  "£24,800",
                  "£26,000",
                  "£26,900",
                  "£26,500",
                  "£23,800",
                  "£23,300"
                ],
                "footer": "21,300",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27300\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              }
            ],
            "defaultPageSize": 22,
            "paginationType": "numbers",
            "showPageInfo": true,
            "minRows": 1,
            "showSortable": true,
            "dataKey": "random_key",
            "key": "random_key"
          },
          "children": [

          ]
        },
        "class": "reactR_markup"
      },
      "evals": [
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.4.style",
        "tag.attribs.columns.3.style",
        "tag.attribs.columns.4.style",
        "tag.attribs.columns.5.style"
      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    },
    "crosstab_text": "For level 8 graduates of all subjects, 5 years after graduation, the industry with the highest proportion of female graduates is <b>Public administration and defence - compulsory social security<\/b>, and the\n                                median earnings of females in this industry were <b>£25,000<\/b>. The industry\n                                with the highest proportion of male graduates was <b>Wholesale and retail trade - repair of motor vehicles and motorcycles<\/b> and the median earnings of males\n                                in this industry were <b>£25,700<\/b>.<br/><br/> The biggest difference in proportions is seen in <b>Wholesale and retail trade - repair of motor vehicles and motorcycles<\/b> where the proportion of male graduates is <b> 10.7  percentage points higher<\/b> than the proportion of female graduates. The biggest difference in median earnings is seen in <b>Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use<\/b> where the median earnings of male graduates were <b>£23,600  higher<\/b> than the medain earnings of female graduates.The group with the highest earnings was male graduates in the <b>Transportation and storage<\/b> industry\n           (median earnings of <b>£27,300<\/b>).<b>0%<\/b> of female graduates are concentrated in the top 2\n                           industries (either <b>Public administration and defence - compulsory social security<\/b> or <b>Education<\/b>),\n                           whereas for male graduates this is 12.4%.<br/><br/>",
    "crosstab_title": "<h4> Industry of graduate employment for graduates of all subjects by sex, five years after\n                          graduation, male and female level 8 graduates from English HEIs, APs and FECs,\n                            2018/19 tax year.<\/h4>"
  }
}
