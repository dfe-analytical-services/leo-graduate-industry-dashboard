{
  "input": {
    "countinput2": "sex",
    "crosstabs.subjectinput": "All",
    "earningsbutton": "Median earnings",
    "navbar": "subjectByIndustry",
    "qualinput3": "First degree",
    "YAGinput2": "5"
  },
  "output": {
    "crosstab": {
      "x": {
        "tag": {
          "name": "Reactable",
          "attribs": {
            "data": {
              "SECTIONNAME": [
                "Public administration and defence - compulsory social security",
                "Professional, scientific and technical activities",
                "Accommodation and food service activities",
                "Transportation and storage",
                "Real estate activities",
                "Electricity, gas, steam and air conditioning supply",
                "Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use",
                "Information and communication",
                "Construction",
                "Water supply - sewerage, waste management and remediation activities",
                "Activities of extraterritorial organisations and bodies",
                "Agriculture, forestry and fishing",
                "NOT KNOWN",
                "Education",
                "Arts, entertainment and recreation",
                "Financial and insurance activities",
                "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                "Manufacturing",
                "Administrative and support service activities",
                "Mining and quarrying",
                "Other service activities",
                "Human health and social work activities"
              ],
              "group_name": [
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All"
              ],
              "Female": [
                24500,
                25400,
                24100,
                24800,
                25100,
                25800,
                22600,
                23800,
                23600,
                26000,
                24100,
                23900,
                23500,
                26000,
                25400,
                27900,
                26500,
                24000,
                25400,
                23300,
                26900,
                23900
              ],
              "Male": [
                25400,
                23400,
                25000,
                25900,
                25800,
                25700,
                25500,
                24300,
                25800,
                26600,
                22800,
                25900,
                25100,
                23700,
                24100,
                23600,
                26000,
                27000,
                25600,
                23400,
                26500,
                24800
              ],
              "Female & Male": [
                26800,
                26700,
                25500,
                25300,
                25200,
                25100,
                25000,
                24900,
                24700,
                24700,
                24600,
                24500,
                24500,
                24400,
                24300,
                24300,
                23800,
                23400,
                23300,
                23200,
                23200,
                23100
              ]
            },
            "columns": [
              {
                "accessor": ".details",
                "name": "",
                "type": "NULL",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "sortable": false,
                "resizable": false,
                "filterable": false,
                "width": 45,
                "align": "center",
                "details": [
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Public administration and defence - compulsory social security",
                              "Public administration and defence - compulsory social security",
                              "Public administration and defence - compulsory social security"
                            ],
                            "group_name": [
                              "Compulsory social security activities",
                              "Administration of the State and the economic and social policy of the community",
                              "Provision of services to the community as a whole"
                            ],
                            "Female": [
                              23900,
                              27200,
                              26000
                            ],
                            "Male": [
                              26100,
                              25800,
                              24400
                            ],
                            "Female & Male": [
                              24700,
                              24700,
                              24700
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "60fbd4f5103f5316a5f1ccac97f26690",
                          "key": "60fbd4f5103f5316a5f1ccac97f26690",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities"
                            ],
                            "group_name": [
                              "Research and experimental development on social sciences and humanities",
                              "Accounting; bookkeeping and auditing activities; tax consultancy",
                              "Advertising",
                              "Photographic activities",
                              "Technical testing and analysis",
                              "Veterinary activities",
                              "Legal activities",
                              "Architectural and engineering activities and related technical consultancy",
                              "Management consultancy activities",
                              "Activities of head offices",
                              "Specialised design activities",
                              "Translation and interpretation activities",
                              "Market research and public opinion polling",
                              "Other professional; scientific and technical activities n.e.c.",
                              "Research and experimental development on natural sciences and engineering"
                            ],
                            "Female": [
                              24400,
                              22800,
                              25300,
                              24500,
                              24200,
                              24000,
                              23600,
                              26100,
                              25000,
                              23500,
                              24300,
                              26100,
                              26500,
                              24300,
                              25400
                            ],
                            "Male": [
                              24400,
                              23000,
                              25600,
                              24900,
                              23500,
                              25600,
                              25400,
                              22700,
                              24900,
                              25800,
                              23400,
                              25800,
                              25700,
                              24600,
                              24300
                            ],
                            "Female & Male": [
                              26200,
                              25700,
                              25500,
                              25500,
                              25400,
                              25200,
                              25100,
                              25000,
                              24800,
                              24500,
                              24300,
                              23800,
                              23700,
                              23300,
                              22500
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "a0a57fd35859607a8d33b83b9838bdb5",
                          "key": "a0a57fd35859607a8d33b83b9838bdb5",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities",
                              "Accommodation and food service activities"
                            ],
                            "group_name": [
                              "Event catering and other food service activities",
                              "Camping grounds; recreational vehicle parks and trailer parks",
                              "Hotels and similar accommodation",
                              "Beverage serving activities",
                              "Other accommodation",
                              "Restaurants and mobile food service activities",
                              "Holiday and other short-stay accommodation"
                            ],
                            "Female": [
                              25700,
                              24300,
                              25200,
                              25600,
                              23900,
                              23700,
                              25300
                            ],
                            "Male": [
                              23800,
                              22100,
                              24600,
                              23700,
                              25200,
                              24800,
                              26300
                            ],
                            "Female & Male": [
                              27200,
                              25200,
                              24800,
                              24700,
                              24500,
                              23900,
                              23600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "0c9282f72ca2dd9dd5620a7726315f75",
                          "key": "0c9282f72ca2dd9dd5620a7726315f75",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage",
                              "Transportation and storage"
                            ],
                            "group_name": [
                              "Warehousing and storage",
                              "Inland freight water transport",
                              "Postal activities under universal service obligation",
                              "Other passenger land transport ",
                              "Support activities for transportation",
                              "Sea and coastal freight water transport",
                              "Passenger rail transport; interurban",
                              "Inland passenger water transport",
                              "Freight air transport and space transport",
                              "Passenger air transport",
                              "Sea and coastal passenger water transport",
                              "Transport via pipeline",
                              "Freight transport by road and removal services",
                              "Other postal and courier activities",
                              "Freight rail transport"
                            ],
                            "Female": [
                              25300,
                              "NA",
                              24700,
                              23800,
                              25800,
                              24200,
                              24600,
                              25300,
                              25400,
                              24600,
                              24500,
                              25000,
                              24700,
                              25500,
                              25400
                            ],
                            "Male": [
                              24700,
                              24900,
                              25300,
                              24300,
                              23700,
                              24500,
                              25000,
                              24700,
                              25300,
                              25700,
                              24600,
                              25600,
                              24800,
                              25600,
                              25300
                            ],
                            "Female & Male": [
                              25800,
                              25500,
                              25500,
                              25500,
                              25400,
                              25300,
                              25200,
                              24900,
                              24900,
                              24600,
                              24600,
                              24500,
                              24500,
                              23800,
                              23600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "85ab576be28dd89d05088ccd210c1425",
                          "key": "85ab576be28dd89d05088ccd210c1425",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Real estate activities",
                              "Real estate activities",
                              "Real estate activities"
                            ],
                            "group_name": [
                              "Buying and selling of own real estate",
                              "Real estate activities on a fee or contract basis",
                              "Renting and operating of own or leased real estate"
                            ],
                            "Female": [
                              25300,
                              25200,
                              24800
                            ],
                            "Male": [
                              24800,
                              26100,
                              24200
                            ],
                            "Female & Male": [
                              26500,
                              25900,
                              24400
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "abd3f4c3ef5a4d9248c486c7c9c0a365",
                          "key": "abd3f4c3ef5a4d9248c486c7c9c0a365",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Electricity, gas, steam and air conditioning supply",
                              "Electricity, gas, steam and air conditioning supply"
                            ],
                            "group_name": [
                              "Electric power generation; transmission and distribution",
                              "Manufacture of gas; distribution of gaseous fuels through mains"
                            ],
                            "Female": [
                              24900,
                              26000
                            ],
                            "Male": [
                              25500,
                              26300
                            ],
                            "Female & Male": [
                              24900,
                              24600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "af11dab7bd4c8b2c0ff322c44b9ab513",
                          "key": "af11dab7bd4c8b2c0ff322c44b9ab513",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use",
                              "Activities of households as employers - undifferentiated goods-and services-producing activities of households for own use"
                            ],
                            "group_name": [
                              "Undifferentiated goods-producing activities of private households for own use",
                              "Activities of households as employers of domestic personnel"
                            ],
                            "Female": [
                              25400,
                              27000
                            ],
                            "Male": [
                              "NA",
                              26500
                            ],
                            "Female & Male": [
                              25600,
                              24200
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "e51f8fa5a518da8704f4352388f2ac2d",
                          "key": "e51f8fa5a518da8704f4352388f2ac2d",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication",
                              "Information and communication"
                            ],
                            "group_name": [
                              "Television programming and broadcasting activities",
                              "Other telecommunications activities",
                              "Wired telecommunications activities",
                              "Data processing; hosting and related activities; web portals",
                              "Software publishing",
                              "Radio broadcasting",
                              "Computer programming; consultancy and related activities",
                              "Publishing of books; periodicals and other publishing activities",
                              "Sound recording and music publishing activities",
                              "Satellite telecommunications activities",
                              "Other information service activities",
                              "Motion picture; video and television programme activities",
                              "Wireless telecommunications activities"
                            ],
                            "Female": [
                              26100,
                              25000,
                              22800,
                              24000,
                              24300,
                              26100,
                              24400,
                              25200,
                              25100,
                              25500,
                              26400,
                              25900,
                              24400
                            ],
                            "Male": [
                              23700,
                              25700,
                              25300,
                              25800,
                              25000,
                              22700,
                              27400,
                              23800,
                              26900,
                              23400,
                              27100,
                              25000,
                              25000
                            ],
                            "Female & Male": [
                              26600,
                              26500,
                              26400,
                              25600,
                              25200,
                              25100,
                              25100,
                              25100,
                              24900,
                              24800,
                              24400,
                              24100,
                              23400
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "014293186fd6d32c1ca0a19a2686524c",
                          "key": "014293186fd6d32c1ca0a19a2686524c",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction",
                              "Construction"
                            ],
                            "group_name": [
                              "Development of building projects",
                              "Construction of residential and non-residential buildings",
                              "Electrical; plumbing and other construction installation activities",
                              "Construction of roads and railways",
                              "Construction of utility projects",
                              "Other specialised construction activities",
                              "Construction of other civil engineering projects",
                              "Demolition and site preparation",
                              "Building completion and finishing"
                            ],
                            "Female": [
                              24300,
                              25000,
                              24700,
                              24000,
                              25300,
                              26000,
                              26300,
                              25700,
                              22800
                            ],
                            "Male": [
                              25500,
                              25600,
                              23800,
                              23800,
                              24900,
                              25300,
                              24500,
                              26400,
                              23400
                            ],
                            "Female & Male": [
                              28300,
                              26700,
                              26500,
                              26300,
                              25800,
                              25100,
                              24600,
                              24600,
                              23800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "2b4a0b3600b992d1c65e245a91a2b11c",
                          "key": "2b4a0b3600b992d1c65e245a91a2b11c",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities",
                              "Water supply - sewerage, waste management and remediation activities"
                            ],
                            "group_name": [
                              "Materials recovery",
                              "Sewerage",
                              "Waste treatment and disposal",
                              "Waste collection",
                              "Remediation activities and other waste management services",
                              "Water collection; treatment and supply"
                            ],
                            "Female": [
                              24600,
                              27200,
                              24600,
                              25600,
                              25600,
                              26300
                            ],
                            "Male": [
                              23100,
                              24900,
                              24100,
                              25200,
                              26200,
                              25800
                            ],
                            "Female & Male": [
                              25800,
                              25600,
                              25100,
                              25100,
                              23700,
                              23600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "4322d2670777ccdc77a6d8ef668ec202",
                          "key": "4322d2670777ccdc77a6d8ef668ec202",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Activities of extraterritorial organisations and bodies"
                            ],
                            "group_name": [
                              "Activities of extraterritorial organisations and bodies"
                            ],
                            "Female": [
                              25200
                            ],
                            "Male": [
                              24200
                            ],
                            "Female & Male": [
                              24500
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "14dacd4f5915775e8fd9216d832409da",
                          "key": "14dacd4f5915775e8fd9216d832409da",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing",
                              "Agriculture, forestry and fishing"
                            ],
                            "group_name": [
                              "Manufacture of musical instruments",
                              "Manufacture of wearing apparel; except fur apparel",
                              "Manufacture of products of wood; cork; straw and plaiting materials",
                              "Manufacture of knitted and crocheted apparel",
                              "NOT KNOWN",
                              "Manufacture of jewellery; bijouterie and related articles",
                              "Manufacture of articles of fur",
                              "Sawmilling and planing of wood"
                            ],
                            "Female": [
                              23600,
                              25700,
                              23900,
                              25100,
                              26200,
                              23700,
                              25800,
                              24500
                            ],
                            "Male": [
                              24700,
                              24000,
                              26600,
                              24200,
                              25800,
                              25100,
                              25200,
                              26300
                            ],
                            "Female & Male": [
                              27000,
                              25700,
                              25200,
                              25000,
                              24700,
                              24700,
                              24500,
                              24300
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "dd8d6558e3342dc3fe069a2a14daabde",
                          "key": "dd8d6558e3342dc3fe069a2a14daabde",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "NOT KNOWN"
                            ],
                            "group_name": [
                              "NOT KNOWN"
                            ],
                            "Female": [
                              22700
                            ],
                            "Male": [
                              24900
                            ],
                            "Female & Male": [
                              25800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "74eba0804206b21bae0d6bcbbce0c981",
                          "key": "74eba0804206b21bae0d6bcbbce0c981",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Education",
                              "Education",
                              "Education",
                              "Education",
                              "Education",
                              "Education"
                            ],
                            "group_name": [
                              "Educational support activities",
                              "Secondary education",
                              "Pre-primary education",
                              "Higher education",
                              "Other education",
                              "Primary education"
                            ],
                            "Female": [
                              23800,
                              25400,
                              25200,
                              22800,
                              25000,
                              26200
                            ],
                            "Male": [
                              26300,
                              22700,
                              24700,
                              24700,
                              24800,
                              26300
                            ],
                            "Female & Male": [
                              25700,
                              25000,
                              24900,
                              24700,
                              24300,
                              23900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "883a309b68d684b0be0ee4581aba5f4f",
                          "key": "883a309b68d684b0be0ee4581aba5f4f",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation",
                              "Arts, entertainment and recreation"
                            ],
                            "group_name": [
                              "Sports activities",
                              "Libraries; archives; museums and other cultural activities",
                              "Creative; arts and entertainment activities",
                              "Amusement and recreation activities",
                              "Gambling and betting activities"
                            ],
                            "Female": [
                              25600,
                              25700,
                              25000,
                              25000,
                              25500
                            ],
                            "Male": [
                              24100,
                              23600,
                              24900,
                              25800,
                              27000
                            ],
                            "Female & Male": [
                              25000,
                              24600,
                              24400,
                              24400,
                              23800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "803df7783737e7fdba33bf2031cc4f97",
                          "key": "803df7783737e7fdba33bf2031cc4f97",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities",
                              "Financial and insurance activities"
                            ],
                            "group_name": [
                              "Activities of holding companies",
                              "Other financial service activities; except insurance and pension funding",
                              "Insurance",
                              "Activities auxiliary to financial services; except insurance and pension funding",
                              "Reinsurance",
                              "Pension funding",
                              "Fund management activities",
                              "Activities auxiliary to insurance and pension funding",
                              "Trusts; funds and similar financial entities",
                              "Monetary intermediation"
                            ],
                            "Female": [
                              25600,
                              26100,
                              24100,
                              24400,
                              25400,
                              24600,
                              24800,
                              23900,
                              25200,
                              25900
                            ],
                            "Male": [
                              25700,
                              25400,
                              25700,
                              26600,
                              24200,
                              25600,
                              25500,
                              24600,
                              26800,
                              25900
                            ],
                            "Female & Male": [
                              26800,
                              25600,
                              24900,
                              24900,
                              24900,
                              24700,
                              24500,
                              24400,
                              23800,
                              23500
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "31a54a41a18b97eaecb822b765646ee3",
                          "key": "31a54a41a18b97eaecb822b765646ee3",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles"
                            ],
                            "group_name": [
                              "Retail sale of information and communication equipment in specialised stores",
                              "Sale of motor vehicle parts and accessories",
                              "Sale of motor vehicles",
                              "Retail sale of automotive fuel in specialised stores",
                              "Retail sale of other goods in specialised stores",
                              "Retail trade not in stores; stalls or markets",
                              "Retail sale in non-specialised stores",
                              "Wholesale on a fee or contract basis",
                              "Retail sale of food; beverages and tobacco in specialised stores",
                              "Wholesale of agricultural raw materials and live animals",
                              "Sale; maintenance and repair of motorcycles and related parts and accessories",
                              "Retail sale via stalls and markets",
                              "Wholesale of food; beverages and tobacco",
                              "Non-specialised wholesale trade",
                              "Wholesale of household goods",
                              "Wholesale of other machinery; equipment and supplies",
                              "Other specialised wholesale",
                              "Maintenance and repair of motor vehicles",
                              "Retail sale of other household equipment in specialised stores",
                              "Retail sale of cultural and recreation goods in specialised stores",
                              "Wholesale of information and communication equipment"
                            ],
                            "Female": [
                              24800,
                              25400,
                              24600,
                              24000,
                              26100,
                              24500,
                              24200,
                              24200,
                              24200,
                              25700,
                              25200,
                              25600,
                              25300,
                              24800,
                              24800,
                              25500,
                              24900,
                              25800,
                              26100,
                              25900,
                              25600
                            ],
                            "Male": [
                              25800,
                              25500,
                              25800,
                              24400,
                              24100,
                              26100,
                              24400,
                              23600,
                              27100,
                              23600,
                              25000,
                              25600,
                              23500,
                              25300,
                              25100,
                              24600,
                              26900,
                              25500,
                              26200,
                              26000,
                              22400
                            ],
                            "Female & Male": [
                              27200,
                              26500,
                              26300,
                              26300,
                              26200,
                              26000,
                              26000,
                              25900,
                              25800,
                              25800,
                              25600,
                              25600,
                              25500,
                              25100,
                              25000,
                              24800,
                              24600,
                              24200,
                              24100,
                              24100,
                              23900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "a3e37a5a31803d7ae7cab1284e2bae38",
                          "key": "a3e37a5a31803d7ae7cab1284e2bae38",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing",
                              "Manufacturing"
                            ],
                            "group_name": [
                              "Manufacture of articles of fur",
                              "Repair of fabricated metal products; machinery and equipment",
                              "Manufacture of basic pharmaceutical products",
                              "Manufacture of games and toys",
                              "Printing and service activities related to printing",
                              "Casting of metals",
                              "Manufacture of refractory products",
                              "Manufacture of other special-purpose machinery",
                              "Manufacture of weapons and ammunition",
                              "Manufacture of medical and dental instruments and supplies",
                              "Manufacture of tanks; reservoirs and containers of metal",
                              "Manufacture of soap and detergents; cleaning and polishing preparations; perfumes and toilet preparations",
                              "Manufacture of transport equipment n.e.c.",
                              "Manufacture of electric lighting equipment",
                              "Manufacture of vegetable and animal oils and fats",
                              "Manufacture of motor vehicles",
                              "Treatment and coating of metals; machining",
                              "Manufacture of basic chemicals; fertilisers and nitrogen compounds; plastics and synthetic rubber in primary forms",
                              "Manufacture of structural metal products",
                              "Manufacture of other electrical equipment",
                              "Preparation and spinning of textile fibres",
                              "Forging; pressing; stamping and roll-forming of metal; powder metallurgy",
                              "Finishing of textiles",
                              "Manufacture of wiring and wiring devices",
                              "Manufacture of beverages",
                              "Manufacture of military fighting vehicles",
                              "Manufacture of refined petroleum products",
                              "Cutting; shaping and finishing of stone",
                              "Manufacture of other food products",
                              "Manufacture of pulp; paper and paperboard",
                              "Manufacture of computers and peripheral equipment",
                              "Manufacture of wearing apparel; except fur apparel",
                              "Manufacture of musical instruments",
                              "Manufacture of basic iron and steel and of ferro-alloys",
                              "Manufacture of electric motors; generators; transformers and electricity distribution and control apparatus",
                              "Manufacturing n.e.c.",
                              "Manufacture of articles of concrete; cement and plaster",
                              "Manufacture of articles of paper and paperboard ",
                              "Manufacture of pharmaceutical preparations",
                              "Manufacture of optical instruments and photographic equipment",
                              "Manufacture of sports goods",
                              "Manufacture of domestic appliances",
                              "Manufacture of dairy products",
                              "Manufacture of metal forming machinery and machine tools",
                              "Manufacture of air and spacecraft and related machinery",
                              "Manufacture of knitted and crocheted apparel",
                              "Manufacture of agricultural and forestry machinery",
                              "Manufacture of irradiation; electromedical and electrotherapeutic equipment",
                              "Manufacture of footwear",
                              "Processing and preserving of fruit and vegetables",
                              "Manufacture of abrasive products and non-metallic mineral products n.e.c.",
                              "Manufacture of general-purpose machinery",
                              "Manufacture of other textiles",
                              "Manufacture of products of wood; cork; straw and plaiting materials",
                              "Manufacture of rubber products",
                              "Manufacture of other general-purpose machinery",
                              "Reproduction of recorded media",
                              "Manufacture of bakery and farinaceous products",
                              "Manufacture of basic precious and other non-ferrous metals",
                              "Processing and preserving of fish; crustaceans and molluscs",
                              "Manufacture of furniture",
                              "Manufacture of other products of first processing of steel",
                              "Manufacture of prepared animal feeds",
                              "Manufacture of glass and glass products",
                              "Manufacture of instruments and appliances for measuring; testing and navigation; watches and clocks",
                              "Weaving of textiles",
                              "Manufacture of cutlery; tools and general hardware",
                              "Manufacture of grain mill products; starches and starch products",
                              "Manufacture of other chemical products",
                              "Manufacture of parts and accessories for motor vehicles",
                              "Processing and preserving of meat and production of meat products",
                              "Manufacture of communication equipment",
                              "Manufacture of pesticides and other agrochemical products",
                              "Manufacture of steam generators; except central heating hot water boilers",
                              "Manufacture of clay building materials",
                              "Manufacture of railway locomotives and rolling stock",
                              "Manufacture of other porcelain and ceramic products",
                              "Tanning and dressing of leather; manufacture of luggage; handbags; saddlery and harness; dressing and dyeing of fur",
                              "Building of ships and boats",
                              "Manufacture of consumer electronics",
                              "Manufacture of jewellery; bijouterie and related articles",
                              "Manufacture of paints; varnishes and similar coatings; printing ink and mastics",
                              "Manufacture of batteries and accumulators",
                              "Manufacture of other fabricated metal products",
                              "Sawmilling and planing of wood",
                              "Manufacture of plastics products",
                              "Manufacture of tubes; pipes; hollow profiles and related fittings; of steel",
                              "Manufacture of electronic components and boards",
                              "Installation of industrial machinery and equipment",
                              "Manufacture of bodies (coachwork) for motor vehicles; manufacture of trailers and semi-trailers"
                            ],
                            "Female": [
                              25900,
                              26600,
                              24100,
                              24100,
                              26100,
                              25100,
                              25100,
                              24800,
                              26200,
                              23400,
                              24800,
                              26300,
                              26900,
                              26800,
                              25500,
                              23100,
                              22900,
                              26300,
                              25200,
                              26900,
                              25400,
                              24100,
                              25700,
                              24800,
                              25100,
                              26200,
                              24600,
                              25200,
                              24900,
                              24200,
                              24300,
                              24400,
                              "NA",
                              24500,
                              23700,
                              25400,
                              24900,
                              26600,
                              24900,
                              25300,
                              24900,
                              25400,
                              25200,
                              24400,
                              26500,
                              24500,
                              25300,
                              25800,
                              26300,
                              25300,
                              25800,
                              23400,
                              26200,
                              26700,
                              24600,
                              25500,
                              25200,
                              24800,
                              24800,
                              26100,
                              25800,
                              "NA",
                              26600,
                              23700,
                              25200,
                              25600,
                              25300,
                              25000,
                              24600,
                              25000,
                              27400,
                              24000,
                              24500,
                              22200,
                              26600,
                              24400,
                              25800,
                              25600,
                              23600,
                              25500,
                              26000,
                              24000,
                              23300,
                              25800,
                              24900,
                              25900,
                              25200,
                              24100,
                              25600,
                              24400
                            ],
                            "Male": [
                              "NA",
                              25900,
                              26400,
                              24800,
                              24800,
                              25000,
                              25500,
                              24900,
                              25300,
                              25600,
                              25300,
                              24100,
                              24100,
                              25000,
                              23700,
                              23700,
                              25800,
                              24500,
                              24800,
                              24900,
                              23000,
                              25900,
                              24900,
                              25200,
                              24200,
                              25500,
                              24400,
                              24300,
                              24100,
                              25900,
                              26300,
                              24500,
                              24700,
                              25900,
                              24400,
                              25100,
                              25200,
                              23700,
                              24400,
                              23600,
                              23900,
                              25100,
                              25700,
                              26100,
                              23900,
                              24800,
                              24900,
                              25300,
                              24700,
                              26500,
                              23700,
                              24900,
                              24700,
                              23800,
                              23300,
                              25500,
                              24100,
                              27200,
                              24300,
                              24500,
                              27400,
                              26700,
                              24000,
                              23700,
                              27400,
                              23900,
                              24700,
                              25100,
                              25700,
                              26800,
                              25000,
                              25500,
                              24500,
                              22300,
                              27100,
                              24900,
                              24700,
                              23400,
                              25000,
                              25300,
                              24100,
                              24500,
                              25000,
                              25800,
                              26600,
                              24100,
                              26900,
                              24300,
                              25100,
                              25700
                            ],
                            "Female & Male": [
                              27600,
                              27000,
                              26900,
                              26900,
                              26500,
                              26300,
                              26200,
                              26100,
                              26100,
                              26000,
                              26000,
                              26000,
                              25900,
                              25900,
                              25800,
                              25800,
                              25700,
                              25700,
                              25700,
                              25700,
                              25700,
                              25700,
                              25500,
                              25500,
                              25500,
                              25500,
                              25400,
                              25400,
                              25400,
                              25300,
                              25300,
                              25300,
                              25200,
                              25200,
                              25200,
                              25100,
                              25100,
                              25100,
                              25000,
                              25000,
                              25000,
                              25000,
                              24900,
                              24900,
                              24900,
                              24800,
                              24800,
                              24800,
                              24800,
                              24700,
                              24700,
                              24700,
                              24600,
                              24600,
                              24600,
                              24500,
                              24500,
                              24400,
                              24400,
                              24400,
                              24400,
                              24400,
                              24300,
                              24300,
                              24300,
                              24300,
                              24300,
                              24200,
                              24200,
                              23900,
                              23800,
                              23800,
                              23700,
                              23700,
                              23700,
                              23700,
                              23600,
                              23600,
                              23500,
                              23400,
                              23400,
                              23400,
                              23300,
                              23300,
                              23200,
                              23100,
                              23000,
                              22900,
                              22700,
                              22700
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "5743cfc5a254b51ba6f381e91d47bca2",
                          "key": "5743cfc5a254b51ba6f381e91d47bca2",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities",
                              "Administrative and support service activities"
                            ],
                            "group_name": [
                              "Office administrative and support activities",
                              "Renting and leasing of personal and household goods",
                              "Temporary employment agency activities",
                              "Travel agency and tour operator activities",
                              "Security systems service activities",
                              "Cleaning activities",
                              "Other human resources provision",
                              "Landscape service activities",
                              "Renting and leasing of motor vehicles",
                              "Organisation of conventions and trade shows",
                              "Combined facilities support activities",
                              "Leasing of intellectual property and similar products; except copyrighted works",
                              "Private security activities",
                              "Activities of call centres",
                              "Investigation activities",
                              "Other reservation service and related activities",
                              "Renting and leasing of other machinery; equipment and tangible goods",
                              "Business support service activities n.e.c.",
                              "Activities of employment placement agencies"
                            ],
                            "Female": [
                              24500,
                              24800,
                              23900,
                              25600,
                              23600,
                              23900,
                              23800,
                              24500,
                              25500,
                              25800,
                              24200,
                              26100,
                              25000,
                              24900,
                              23400,
                              25700,
                              23800,
                              25300,
                              24200
                            ],
                            "Male": [
                              24400,
                              24800,
                              24400,
                              26300,
                              26900,
                              26900,
                              25200,
                              25000,
                              25800,
                              24800,
                              25700,
                              27000,
                              25300,
                              27100,
                              25300,
                              25900,
                              24800,
                              26500,
                              26500
                            ],
                            "Female & Male": [
                              26500,
                              26300,
                              26200,
                              25900,
                              25500,
                              25100,
                              24900,
                              24900,
                              24800,
                              24700,
                              24600,
                              24300,
                              24200,
                              24200,
                              24100,
                              24100,
                              23900,
                              23900,
                              23800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "70ede13727edb45cb404a4da2fe1c922",
                          "key": "70ede13727edb45cb404a4da2fe1c922",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Mining and quarrying",
                              "Mining and quarrying",
                              "Mining and quarrying",
                              "Mining and quarrying",
                              "Mining and quarrying",
                              "Mining and quarrying"
                            ],
                            "group_name": [
                              "Combined facilities support activities",
                              "Computer programming; consultancy and related activities",
                              "Cleaning activities",
                              "Activities of extraterritorial organisations and bodies",
                              "NOT KNOWN",
                              "Libraries; archives; museums and other cultural activities"
                            ],
                            "Female": [
                              25500,
                              "NA",
                              23100,
                              "NA",
                              25100,
                              26100
                            ],
                            "Male": [
                              27300,
                              24800,
                              24100,
                              23000,
                              22700,
                              24900
                            ],
                            "Female & Male": [
                              26600,
                              26000,
                              25800,
                              25300,
                              24000,
                              22700
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "7fabc6d5102f2a181f5d338a9d35d725",
                          "key": "7fabc6d5102f2a181f5d338a9d35d725",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Other service activities",
                              "Other service activities",
                              "Other service activities",
                              "Other service activities",
                              "Other service activities",
                              "Other service activities"
                            ],
                            "group_name": [
                              "Activities of trade unions",
                              "Activities of other membership organisations",
                              "Other personal service activities",
                              "Repair of personal and household goods",
                              "Activities of business; employers and professional membership organisations",
                              "Repair of computers and communication equipment"
                            ],
                            "Female": [
                              25700,
                              23800,
                              25500,
                              24700,
                              23500,
                              24200
                            ],
                            "Male": [
                              25700,
                              23400,
                              26400,
                              23600,
                              25300,
                              25700
                            ],
                            "Female & Male": [
                              26200,
                              26000,
                              26000,
                              24000,
                              23500,
                              23100
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "29ec14a53fb085929a51380f071173e0",
                          "key": "29ec14a53fb085929a51380f071173e0",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities"
                            ],
                            "group_name": [
                              "Hospital activities",
                              "Other human health activities",
                              "Other social work activities without accommodation",
                              "Residential nursing care activities",
                              "Social work activities without accommodation for the elderly and disabled",
                              "Residential care activities for the elderly and disabled",
                              "Medical and dental practice activities",
                              "Other residential care activities",
                              "Residential care activities for mental retardation; mental health and substance abuse"
                            ],
                            "Female": [
                              24500,
                              24300,
                              26300,
                              24900,
                              24700,
                              24900,
                              24600,
                              26900,
                              24700
                            ],
                            "Male": [
                              26000,
                              26000,
                              23100,
                              25600,
                              24500,
                              23800,
                              24300,
                              23600,
                              25500
                            ],
                            "Female & Male": [
                              26800,
                              26800,
                              26300,
                              26100,
                              25900,
                              25200,
                              25100,
                              24400,
                              24000
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "a2428bfae6dbfe37c4d10f9b30dd19f9",
                          "key": "a2428bfae6dbfe37c4d10f9b30dd19f9",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "accessor": "SECTIONNAME",
                "name": "Industry",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 500
              },
              {
                "accessor": "group_name",
                "name": "3 digit SIC code",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 300
              },
              {
                "accessor": "Female",
                "name": "Female",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "25,875",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Male",
                "name": "Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "26,110",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Female & Male",
                "name": "Female & Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "26,345",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 27900\n              var min = 22600\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              }
            ],
            "defaultPageSize": 22,
            "paginationType": "numbers",
            "showPageInfo": true,
            "minRows": 1,
            "showSortable": true,
            "dataKey": "0a6f496f8802ed468372157ad31817e5",
            "key": "0a6f496f8802ed468372157ad31817e5"
          },
          "children": [

          ]
        },
        "class": "reactR_markup"
      },
      "evals": [
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.12.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.13.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.14.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.15.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.16.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.17.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.18.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.19.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.20.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.21.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.21.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.21.children.0.attribs.columns.4.style",
        "tag.attribs.columns.3.style",
        "tag.attribs.columns.4.style",
        "tag.attribs.columns.5.style"
      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    },
    "crosstab_text": "For First degree graduates of all subjects, 5 years after graduation, the industry with the highest proportion of female graduates is <b>Transportation and storage<\/b>, and the\n                                median earnings of females in this industry were <b>£24,800<\/b>. The industry\n                                with the highest proportion of male graduates was <b>Electricity, gas, steam and air conditioning supply<\/b> and the median earnings of males\n                                in this industry were <b>£25,700<\/b>.<br/><br/>The biggest difference in proportions is seen in <b>Transportation and storage<\/b> where the proportion of female graduates is <b> 9.5  percentage points higher<\/b> than the proportion of male graduates.<br/><br/>The biggest difference in median earnings is seen in <b>Financial and insurance activities<\/b> where the median earnings of female graduates were <b>£4,300  higher<\/b> than the median earnings of male graduates.<br/><br/>The group with the highest earnings was female graduates in the <b>Financial and insurance activities <\/b> industry (median earnings of <b>£27,900<\/b>).<br/><br/>",
    "crosstab_title": "<h4> Industry of graduate employment for graduates of all subjects by sex , 5 years after\n                          graduation, male and female  First degree  graduates from English HEIs, APs and FECs,\n                            2018/19 tax year.<\/h4>"
  }
}
