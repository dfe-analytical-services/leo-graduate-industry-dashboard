{
  "input": {
    "countinput2": "sex",
    "crosstabs.subjectinput": "Allied health",
    "earningsbutton": "Median earnings",
    "navbar": "subjectByIndustry",
    "qualinput3": "Level 8",
    "YAGinput2": "5"
  },
  "output": {
    "crosstab": {
      "x": {
        "tag": {
          "name": "Reactable",
          "attribs": {
            "data": {
              "SECTIONNAME": [
                "Education",
                "Manufacturing",
                "Professional, scientific and technical activities",
                "Public administration and defence - compulsory social security",
                "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                "Administrative and support service activities",
                "Not known",
                "Other service activities",
                "Financial and insurance activities",
                "Human health and social work activities",
                "Information and communication",
                "Transportation and storage"
              ],
              "group_name": [
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All",
                "All"
              ],
              "Female": [
                24200,
                26000,
                24100,
                25500,
                23700,
                25300,
                23400,
                23700,
                24600,
                25200,
                24200,
                25500
              ],
              "Male": [
                25600,
                26400,
                24900,
                24400,
                25800,
                25900,
                25000,
                "NA",
                25100,
                24900,
                24900,
                "NA"
              ],
              "Female & Male": [
                25400,
                24200,
                24600,
                26300,
                26400,
                25900,
                25300,
                25600,
                24800,
                24000,
                24500,
                25200
              ]
            },
            "columns": [
              {
                "accessor": ".details",
                "name": "",
                "type": "NULL",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "sortable": false,
                "resizable": false,
                "filterable": false,
                "width": 45,
                "align": "center",
                "details": [
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Education",
                              "Education"
                            ],
                            "group_name": [
                              "Secondary education",
                              "Higher education"
                            ],
                            "Female": [
                              23400,
                              25500
                            ],
                            "Male": [
                              "NA",
                              24900
                            ],
                            "Female & Male": [
                              26000,
                              25300
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Manufacturing",
                              "Manufacturing"
                            ],
                            "group_name": [
                              "Manufacture of pharmaceutical preparations",
                              "Manufacture of other chemical products"
                            ],
                            "Female": [
                              24400,
                              "NA"
                            ],
                            "Male": [
                              27000,
                              25900
                            ],
                            "Female & Male": [
                              24300,
                              24300
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities",
                              "Professional, scientific and technical activities"
                            ],
                            "group_name": [
                              "Research and experimental development on natural sciences and engineering",
                              "Accounting; bookkeeping and auditing activities; tax consultancy",
                              "Other professional; scientific and technical activities n.e.c.",
                              "Market research and public opinion polling",
                              "Legal activities",
                              "Management consultancy activities"
                            ],
                            "Female": [
                              26600,
                              "NA",
                              25500,
                              25200,
                              "NA",
                              24200
                            ],
                            "Male": [
                              23700,
                              25900,
                              24000,
                              "NA",
                              25200,
                              "NA"
                            ],
                            "Female & Male": [
                              25700,
                              24900,
                              24100,
                              24400,
                              24600,
                              24600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Public administration and defence - compulsory social security",
                              "Public administration and defence - compulsory social security"
                            ],
                            "group_name": [
                              "Administration of the State and the economic and social policy of the community",
                              "Provision of services to the community as a whole"
                            ],
                            "Female": [
                              25600,
                              23600
                            ],
                            "Male": [
                              25700,
                              26600
                            ],
                            "Female & Male": [
                              24900,
                              24700
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles",
                              "Wholesale and retail trade - repair of motor vehicles and motorcycles"
                            ],
                            "group_name": [
                              "Retail sale of other goods in specialised stores",
                              "Wholesale of household goods",
                              "Retail sale in non-specialised stores",
                              "Maintenance and repair of motor vehicles"
                            ],
                            "Female": [
                              "NA",
                              23500,
                              25600,
                              25600
                            ],
                            "Male": [
                              26100,
                              "NA",
                              "NA",
                              "NA"
                            ],
                            "Female & Male": [
                              26800,
                              25600,
                              25600,
                              24900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Administrative and support service activities",
                              "Administrative and support service activities"
                            ],
                            "group_name": [
                              "Temporary employment agency activities",
                              "Business support service activities n.e.c."
                            ],
                            "Female": [
                              23500,
                              22900
                            ],
                            "Male": [
                              "NA",
                              26300
                            ],
                            "Female & Male": [
                              25200,
                              25800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Not known"
                            ],
                            "group_name": [
                              "NOT KNOWN"
                            ],
                            "Female": [
                              24600
                            ],
                            "Male": [
                              25600
                            ],
                            "Female & Male": [
                              24600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Other service activities"
                            ],
                            "group_name": [
                              "Activities of other membership organisations"
                            ],
                            "Female": [
                              26800
                            ],
                            "Male": [
                              "NA"
                            ],
                            "Female & Male": [
                              26400
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Financial and insurance activities",
                              "Financial and insurance activities"
                            ],
                            "group_name": [
                              "Pension funding",
                              "Activities auxiliary to financial services; except insurance and pension funding"
                            ],
                            "Female": [
                              25100,
                              "NA"
                            ],
                            "Male": [
                              "NA",
                              23000
                            ],
                            "Female & Male": [
                              24700,
                              24800
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities",
                              "Human health and social work activities"
                            ],
                            "group_name": [
                              "Residential care activities for mental retardation; mental health and substance abuse",
                              "Hospital activities",
                              "Medical and dental practice activities",
                              "Other residential care activities",
                              "Other human health activities",
                              "Other social work activities without accommodation"
                            ],
                            "Female": [
                              23700,
                              24600,
                              24000,
                              24500,
                              23700,
                              24900
                            ],
                            "Male": [
                              25100,
                              24500,
                              "NA",
                              25900,
                              24800,
                              24400
                            ],
                            "Female & Male": [
                              23400,
                              24200,
                              22400,
                              24500,
                              25500,
                              25600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Information and communication"
                            ],
                            "group_name": [
                              "Computer programming; consultancy and related activities"
                            ],
                            "Female": [
                              23400
                            ],
                            "Male": [
                              24900
                            ],
                            "Female & Male": [
                              26600
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  },
                  {
                    "name": "div",
                    "attribs": {
                      "style": {
                        "padding": "16px"
                      }
                    },
                    "children": [
                      {
                        "name": "Reactable",
                        "attribs": {
                          "data": {
                            "SECTIONNAME": [
                              "Transportation and storage"
                            ],
                            "group_name": [
                              "Postal activities under universal service obligation"
                            ],
                            "Female": [
                              23300
                            ],
                            "Male": [
                              "NA"
                            ],
                            "Female & Male": [
                              23900
                            ]
                          },
                          "columns": [
                            {
                              "accessor": "SECTIONNAME",
                              "name": "Industry",
                              "type": "character",
                              "na": "x",
                              "width": 500
                            },
                            {
                              "accessor": "group_name",
                              "name": "3 digit SIC code",
                              "type": "character",
                              "na": "x",
                              "width": 300
                            },
                            {
                              "accessor": "Female",
                              "name": "Female",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Male",
                              "name": "Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            },
                            {
                              "accessor": "Female & Male",
                              "name": "Female & Male",
                              "type": "numeric",
                              "format": {
                                "cell": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                },
                                "aggregated": {
                                  "prefix": "£",
                                  "digits": 0,
                                  "separators": true
                                }
                              },
                              "na": "x",
                              "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
                            }
                          ],
                          "defaultPageSize": 300,
                          "paginationType": "numbers",
                          "showPageInfo": true,
                          "minRows": 1,
                          "outlined": true,
                          "dataKey": "random_key",
                          "key": "random_key",
                          "nested": true
                        },
                        "children": [

                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "accessor": "SECTIONNAME",
                "name": "Industry",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 500
              },
              {
                "accessor": "group_name",
                "name": "3 digit SIC code",
                "type": "character",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "footer": "TOTAL (N)",
                "na": "x",
                "width": 300
              },
              {
                "accessor": "Female",
                "name": "Female",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "14,215",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Male",
                "name": "Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "8,745",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              },
              {
                "accessor": "Female & Male",
                "name": "Female & Male",
                "type": "numeric",
                "footerStyle": {
                  "fontWeight": "bold"
                },
                "format": {
                  "cell": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  },
                  "aggregated": {
                    "prefix": "£",
                    "digits": 0,
                    "separators": true
                  }
                },
                "footer": "11,385",
                "na": "x",
                "style": "\n            // source: https://glin.github.io/reactable/articles/examples.html#grouped-cell-rendering-1\n            function(rowInfo) {\n              // source: https://stackoverflow.com/a/44134328/4856719\n              function hslToHex(h, s, l) {\n                l /= 100;\n                const a = s * Math.min(l, 1 - l) / 100;\n                const f = n => {\n                  const k = (n + h / 30) % 12;\n                  const color = l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n                  return Math.round(255 * color).toString(16).padStart(2, '0');\n                };\n                return `#${f(0)}${f(8)}${f(4)}`;\n              }\n              var value = rowInfo.row['Female & Male']\n              var max = 26400\n              var min = 23400\n              // pct_value = (value - min) * 100 / (max - min)\n              pct_value = (Math.min(value, max) - min) * 100 / (max - min)\n              // If value equals 0, set font color grey.\n              if (value == 0) {\n                var color = '#F7FBFF'\n                var bg = '#F7FBFF'\n              } else {\n                var color = '#000000'\n                var bg = hslToHex(209, 59, 100 - pct_value / 2)\n              }\n              return { color: color, backgroundColor: bg}\n          }"
              }
            ],
            "defaultPageSize": 22,
            "paginationType": "numbers",
            "showPageInfo": true,
            "minRows": 1,
            "showSortable": true,
            "dataKey": "random_key",
            "key": "random_key"
          },
          "children": [

          ]
        },
        "class": "reactR_markup"
      },
      "evals": [
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.0.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.1.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.2.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.3.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.4.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.5.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.6.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.7.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.8.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.9.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.10.children.0.attribs.columns.4.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.2.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.3.style",
        "tag.attribs.columns.0.details.11.children.0.attribs.columns.4.style",
        "tag.attribs.columns.3.style",
        "tag.attribs.columns.4.style",
        "tag.attribs.columns.5.style"
      ],
      "jsHooks": [

      ],
      "deps": [

      ]
    },
    "crosstab_text": "For level 8 graduates of Allied health, 5 years after graduation, the industry with the highest proportion of female graduates is <b>Public administration and defence - compulsory social security<\/b>, and the\n                                median earnings of females in this industry were <b>£25,500<\/b>. The industry\n                                with the highest proportion of male graduates was <b>Education<\/b> and the median earnings of males\n                                in this industry were <b>£25,600<\/b>.<br/><br/> The biggest difference in proportions is seen in <b>Public administration and defence - compulsory social security<\/b> where the proportion of female graduates is <b> 19.1  percentage points higher<\/b> than the proportion of male graduates. The biggest difference in median earnings is seen in <b>Transportation and storage<\/b> where the median earnings of female graduates were <b>£25,500  higher<\/b> than the median earnings of male graduates.The group with the highest earnings was male graduates in the <b>Manufacturing<\/b> industry\n           (median earnings of <b>£26,400<\/b>).<b>5.9%<\/b> of female graduates are concentrated in the top 2\n                           industries (either <b>Education<\/b> or <b>Manufacturing<\/b>),\n                           whereas for male graduates this is 0%.<br/><br/>",
    "crosstab_title": "<h4> Industry of graduate employment for graduates of Allied health by sex, five years after\n                          graduation, male and female level 8 graduates from English HEIs, APs and FECs,\n                            2018/19 tax year.<\/h4>"
  }
}
